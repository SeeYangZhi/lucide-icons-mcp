name: Update Lucide Icons

on:
  # Schedule to check for new releases daily at 2 AM UTC
  schedule:
    - cron: "0 2 * * *"

  # Allow manual triggering
  workflow_dispatch:

env:
  NODE_VERSION: "22"

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    outputs:
      needs_update: ${{ steps.check_release.outputs.needs_update }}
      has_changes: ${{ steps.check_changes.outputs.has_changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Setup Python and Camoufox
        run: |
          pip install -U camoufox[geoip]
          python -m camoufox fetch

      - name: Check for new Lucide release
        id: check_release
        run: |
          # Get latest release from Lucide repository
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/lucide-icons/lucide/releases/latest | jq -r '.tag_name')
          echo "Latest Lucide release: $LATEST_RELEASE"

          # Get current version from our data (if exists)
          if [ -f "data/lucide-version.txt" ]; then
            CURRENT_VERSION=$(cat data/lucide-version.txt)
            echo "Current version: $CURRENT_VERSION"
          else
            CURRENT_VERSION="none"
            echo "No current version found"
          fi

          # Check if update is needed
          if [ "$LATEST_RELEASE" != "$CURRENT_VERSION" ]; then
            echo "Update needed!"
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "latest_version=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          else
            echo "No update needed"
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Update icon data
        if: steps.check_release.outputs.needs_update == 'true'
        run: |
          echo "Updating icon data for lucide version ${{ steps.check_release.outputs.latest_version }}"
          bun run pre-build

      - name: Build and test
        if: steps.check_release.outputs.needs_update == 'true'
        run: |
          bun run build
          bun run lint:fix

      - name: Bump version
        id: version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Bump patch version
          NEW_VERSION=$(node -p "
            const semver = '$CURRENT_VERSION'.split('.');
            semver[2] = String(parseInt(semver[2]) + 1);
            semver.join('.');
          ")

          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Update package.json
          node -e "
            const pkg = require('./package.json');
            pkg.version = '$NEW_VERSION';
            require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');
          "

      - name: Check for changes
        if: steps.check_release.outputs.needs_update == 'true'
        id: check_changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check_release.outputs.needs_update == 'true' && steps.check_changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "feat: update Lucide icons to ${{ steps.check_release.outputs.latest_version }}"
          title: "Update Lucide icons to ${{ steps.check_release.outputs.latest_version }}"
          body: |
            ## ðŸ”„ Automated Lucide Icons Update

            This pull request updates the Lucide icons data to version `${{ steps.check_release.outputs.latest_version }}`.

            ### Changes
            - Updated icon metadata and categories
            - Refreshed icon data from Lucide website
            - Updated version tracking
            - Bumped package version to `${{ steps.version.outputs.new_version }}`

            ### Verification
            - [ ] Icons data has been updated
            - [ ] Build passes successfully
            - [ ] No breaking changes detected
            - [ ] Linting passes without errors
            - [ ] Version has been bumped

            This PR was automatically created by the GitHub Actions workflow.
          branch: update-lucide-${{ steps.check_release.outputs.latest_version }}
          delete-branch: true
